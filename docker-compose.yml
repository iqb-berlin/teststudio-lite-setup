# Base compose file defining services and their settings
# For concrete images check the evironment specific override files.
version: '3.7'

x-env-postgres: &env-postgres
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

x-env-initdata: &env-initdata
  SUPERUSER_NAME: ${SUPERUSER_NAME}
  SUPERUSER_PASSWORD: ${SUPERUSER_PASSWORD}
  WORKSPACE_NAME: ${WORKSPACE_NAME}

x-env-logging-conf: &env-logging-conf
  max-size: "200m"
  max-file: "10"

services:
  traefik:
    image: traefik:v2.2
    container_name: traefik
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  teststudio-lite-db:
    image: postgres:9.6
    container_name: teststudio-lite-db
    environment:
      <<: *env-postgres
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./config/sql/:/docker-entrypoint-initdb.d/

  teststudio-lite-backend:
    container_name: teststudio-lite-backend
    environment:
      <<: *env-postgres
      <<: *env-initdata
      POSTGRES_HOST: teststudio-lite-db
      POSTGRES_PORT: 5432
    depends_on:
      - teststudio-lite-db
    logging:
      options:
        <<: *env-logging-conf
    volumes:
      - itemplayers:/var/www/html/itemplayers
      - itemauthoringtools:/var/www/html/itemauthoringtools
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.teststudio-lite-backend.rule=Host(`${HOSTNAME}`) && PathPrefix(`/api`)"
      - "traefik.http.middlewares.teststudio-lite-backend-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.teststudio-lite-backend.middlewares=teststudio-lite-backend-stripprefix"

  teststudio-lite-frontend:
    container_name: teststudio-lite-frontend
    logging:
      options:
        <<: *env-logging-conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.teststudio-lite-frontend.rule=Host(`${HOSTNAME}`)"

volumes:
  dbdata:
  itemplayers:
  itemauthoringtools:
